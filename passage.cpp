/******************************************************************************
 * Author: Sean Foster                                            <passage.cpp>
 * Date: 11/23/2017
 * Description: Passage class declaration
******************************************************************************/
#include "passage.hpp"

/******************************************************************************
 * passages always start locked
******************************************************************************/
Passage::Passage()
{
  locked = true;
}

Passage::~Passage()
{

}

/******************************************************************************
 * passage base class has a dummy item accepting unlock
******************************************************************************/
bool Passage::unLock(Item *item)
{
  return false;
}

/******************************************************************************
 * returns whether or not the passage is locked
******************************************************************************/
bool Passage::isLocked()
{
  return this->locked;
}

/******************************************************************************
 * sets the passage name
******************************************************************************/
void Passage::setName(std::string name)
{
  this->name = name;
}

/******************************************************************************
 * returns the passage name
******************************************************************************/
std::string Passage::getName()
{
  return this->name;
}

/******************************************************************************
 * dummy unlock
******************************************************************************/
void Passage::unLock()
{
  
}